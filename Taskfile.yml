# https://taskfile.dev

version: '3'

tasks:
  default:
    cmds:
      - task --list-all
    silent: true

  wake:
    desc: Check status of running environment
    summary: |
      Currently assumes `task up` has happened,
      checks status code of environment
    aliases: [status]
    cmds:
      - until [ $(curl -L --write-out '%{http_code}' --silent --output /dev/null https://glorious-doodle-7v49rvx44qxv27gx-80.app.github.dev/) == 200 ]; do "Still waking up..."; done; echo "Awake! \`gh cs ports\` to find URL's"

  git:branch:
    vars:
      PREFIXES: [RM, RPM, MRKT, NERD]
    cmds:
      - echo WIP note to self, pull username from git as a dynamic var

  git:switch:
    desc: Change git branch
    summary: |
      No need to worry about the prefix
      `task git:switch -- EXAMPLE-###`
    cmds:
      - git switch $(git branch | grep {{.CLI_ARGS}})

  logs:
    desc: Follows docker log output
    summary: |
      A stream of docker logs with `--follow`
      piped through color coding with `bat`
    aliases: [log]
    cmds:
      - cmd: docker logs --follow $(sh /workspaces/docker-containers.sh | fzf) |  bat --paging=never --style=plain -l log
        ignore_error: true
        interactive: true

  test:
    desc: Runs a `mix test`
    summary: |
      Runs `mix test`
      Can optionally take a test file:
      `task test -- tests/ui/ui_text.exs`
    cmds:
      - docker exec -it $(sh /workspaces/docker-containers.sh | fzf) mix test {{.CLI_ARGS}}

  start:
    desc: Runs a full Docker start
    summary: |
      Start the engines!
    aliases: [up]
    cmds:
      - docker compose up -d

  stop:
    desc: Runs a full Docker stop
    summary: |
      Hit the brakes!!
    aliases: [down]
    cmds:
      - docker compose down

  restart:
    desc: Runs a full Docker restart
    summary: |
      Runs `/workspaces/dev-hub/setup.sh`
      then fully takes down then up's Docker containers.
      Safe to run multiple times a day if you're patient.
    cmds:
      - docker compose down
      - docker compose up -d

  'migrate:up':
    cmds:
      - docker compose exec -u deploy ecom-webapp bash -lc rake db:migrate:up

  'migrate:down':
    cmds:
      - docker compose exec -u deploy ecom-webapp bash -lc rake db:migrate:down

  eslint:
    desc: Runs Eslint against JavaScript files
    summary: |
      Runs ESLint against `*.js` files within the Redline Web Store.
      Supports `task eslint -- --fix` to automatically fix what is possible.
      Remember to changes after running!
    cmds:
      - docker exec -w /rz/redline/apps/redline_web_store -it dev-cycle-gear-redline-webapp-1 npx eslint {{.CLI_ARGS}}
